import matplotlib.pyplot as plt
import numpy as np
import os
from sklearn import preprocessing


def plot_heatmap(malware_embedding, ax, w, l):
    data = preprocessing.normalize(np.reshape(malware_embedding, (w, l)))
    data = data * 100

    cax = ax.imshow(data, cmap='hot')
    # for i in range(data.shape[0]):
    #     for j in range(data.shape[1]):
    #         ax.text(j, i, f'{round(data[i, j])}', ha='center', va='center')

    return cax


def generate_heatmaps_fake(malware_embeddings, output_file_path, main_title, rows, cols, w, l):
    fig, axes = plt.subplots(rows, cols, figsize=(24, 24))
    fig.subplots_adjust(hspace=0.5)
    fig.suptitle(main_title, fontsize=18)

    for idx, malware_embedding in enumerate(malware_embeddings):
        row, col = divmod(idx, cols)
        ax = axes[row, col]
        cax = plot_heatmap(malware_embedding, ax, w, l)

    fig.colorbar(cax, ax=axes.ravel().tolist())
    plt.savefig(output_file_path)


def generate_heatmaps_original(malware_embeddings, output_file_path, main_title, rows, cols, w, l):
    fig, axes = plt.subplots(rows, cols, figsize=(24, 6))
    fig.subplots_adjust(hspace=0.5)
    fig.suptitle(main_title, fontsize=18)

    for idx, malware_embedding in enumerate(malware_embeddings):
        ax = axes[idx]
        cax = plot_heatmap(malware_embedding, ax, w, l)

    fig.colorbar(cax, ax=axes.ravel().tolist())
    plt.savefig(output_file_path)



if __name__ == '__main__':

    w, l = 24, 32

    # For interemediary malware samples
    epoch_100_embeddings = np.load("/Users/atishayjain/Desktop/FakeMalwareGeneration/intermediary_malware_zeroaccess/intermediary_malware_samples_epoch_100.npy")[:4]
    print(epoch_100_embeddings.shape)

    epoch_200_embeddings = np.load("/Users/atishayjain/Desktop/FakeMalwareGeneration/intermediary_malware_zeroaccess/intermediary_malware_samples_epoch_200.npy")[:4]
    print(epoch_200_embeddings.shape)

    epoch_300_embeddings = np.load("/Users/atishayjain/Desktop/FakeMalwareGeneration/intermediary_malware_zeroaccess/intermediary_malware_samples_epoch_300.npy")[:4]
    print(epoch_300_embeddings.shape)

    epoch_400_embeddings = np.load("/Users/atishayjain/Desktop/FakeMalwareGeneration/intermediary_malware_zeroaccess/intermediary_malware_samples_epoch_400.npy")[:4]
    print(epoch_400_embeddings.shape)

    epoch_500_embeddings = np.load("/Users/atishayjain/Desktop/FakeMalwareGeneration/intermediary_malware_zeroaccess/intermediary_malware_samples_epoch_500.npy")[:4]
    print(epoch_500_embeddings.shape)

    concatenated_array = np.concatenate((epoch_100_embeddings, epoch_200_embeddings, epoch_300_embeddings, epoch_400_embeddings, epoch_500_embeddings), axis=0)

    print(concatenated_array.shape)

    print(concatenated_array)

    output_file_path = os.path.join(os.getcwd(), "intermediary_malware_zeroaccess", "zeroaccess_heatmaps.png")

    main_title = f"Heatmaps for zeroaccess Malware Samples - each row corresponds to 100 epochs. For visualization purposes, the data has been normalized to [-100, 100], reshaped to ({w}, {l})"

    generate_heatmaps_fake(concatenated_array, output_file_path, main_title, rows=5, cols=4, w=24, l=32)


    # For original malware samples
    zeroaccess_original_malware_samples = np.load("/Users/atishayjain/Desktop/FakeMalwareGeneration/distelBERT_embeddings/Malicia (Big 3 - Opcodes)/zeroaccess/tensor_embedding.npy")[:4]

    output_file_path = os.path.join(os.getcwd(), "distelBERT_embeddings", "Malicia (Big 3 - Opcodes)", "zeroaccess", "zeroaccess_heatmap.png")

    main_title = f"Heatmaps for zeroaccess Original Malware Samples - the data has been normalized to [-100, 100], reshaped to ({w}, {l})"

    generate_heatmaps_original(zeroaccess_original_malware_samples, output_file_path, main_title, rows=1, cols=4, w=24, l=32)
